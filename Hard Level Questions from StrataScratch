Question 1: Top Percentile Fraud
https://platform.stratascratch.com/coding/10303-top-percentile-fraud?code_type=1

Descritpion:ABC Corp is a mid-sized insurer in the US and in the recent past their fraudulent claims have increased 
significantly for their personal auto insurance portfolio. They have developed a ML based predictive model to identify
propensity of fraudulent claims. Now, they assign highly experienced claim adjusters for top 5 percentile of claims
identified by the model.
Your objective is to identify the top 5 percentile of claims from each state. 
Your output should be policy number, state, claim cost, and fraud score.

Using SQL:

select 
    policy_num,
    state,
    claim_cost,
    fraud_score,rnk from 
            (select 
                t.*,
                percent_rank() over (partition by state order by fraud_score desc ) as rnk
            from 
                fraud_score t) t

where rnk <= 0.05


----------------------------------------------------
Question 2: Negative Reviews in New Locations
https://platform.stratascratch.com/coding/2087-negative-reviews-in-new-locations?code_type=1

Descritpion:Find stores that were opened in the second half of 2021 with more than 20% of their reviews being negative. 
A review is considered negative when the score given by a customer is below 5. 
Output the names of the stores together with the ratio of negative reviews to positive ones.

Using SQL:

select 
    name,
    sum(case when score < 5 then 1 else 0 end)/sum(case when score >= 5 then 1 else 0 end)
from 
    instacart_stores s
left join 
    instacart_reviews r on r.store_id = s.id
where 
    opening_date >= '2021-07-01'
group by 
    name
having 
 sum(case when score < 5 then 1 else 0 end)/count(*)::float * 100 > 20



----------------------------------------------------
Question 3: Top 5 States With 5 Star Businesses
https://platform.stratascratch.com/coding/10046-top-5-states-with-5-star-businesses?code_type=1

Descritpion:Find the top 5 states with the most 5 star businesses. 
Output the state name along with the number of 5-star businesses and order records by the number of 5-star businesses in descending order. 
In case there are ties in the number of businesses, return all the unique states.
If two states have the same result, sort them in alphabetical order.

Using SQL:

with businesses_by_state as (select 
    t.state,
    count(*) as number_of_businesses,
    rank() over (order by count(*) desc) as rnk
from 
    yelp_business t
where 
    t.stars = 5
group by 
    t.state)

select 
    * 
from 
    businesses_by_state
where 
    rnk <=5
order by 
    state asc,
    number_of_businesses desc


----------------------------------------------------
Question 4: Distinct Salaries
https://platform.stratascratch.com/coding/9898-unique-salaries?code_type=1

Descritpion:Find the top three distinct salaries for each department. 
Output the department name and the top 3 distinct salaries by each department. 
Order your results alphabetically by department and then by highest salary to lowest.



Using SQL:

with ranked_salaries as 
    (select 
    department,
    salary,
    rank() over (partition by department order by salary DESC) as rnk
from 
        (select 
            department, 
            salary
        from
            twitter_employee
        group by 
            department, 
            salary 
        order by
            department, 
            salary ) t)
            
select 
    *
from 
    ranked_salaries
where rnk <=3


Question 5: Monthly Percentage Difference
https://platform.stratascratch.com/coding/10319-monthly-percentage-difference?code_type=2

Descritpion:Given a table of purchases by date, calculate the month-over-month percentage change in revenue. 
The output should include the year-month date (YYYY-MM) and percentage change, rounded to the 2nd decimal point, 
and sorted from the beginning of the year to the end of the year.
The percentage change column will be populated from the 2nd month forward and can be calculated as 
((this month's revenue - last month's revenue) / last month's revenue)*100.

Using SQL:

with revenue as (select 
    date_trunc('month',created_at) as date_month  ,
    sum(t.value) as revenue
from sf_transactions t
group by date_month
order by date_month),

final_revenue as (
            select t.*,
                    lag(t.revenue) over (order by t.date_month) as prev_month_revenue
    
            from revenue t),
final_final as (

select to_char(t.date_month, 'YYYY-MM') as month,
      round((( t.revenue - t.prev_month_revenue) / prev_month_revenue)*100, 2) as difference 
from final_revenue t)

select * from revenue

;

Using Python Pandas:

import numpy
import pandas
df = sf_transactions

df['Month'] = df.created_at.dt.to_period('M')
df = df.groupby('Month').agg({'value':'sum'}).sort_values('Month').reset_index()

df['Prev_month'] = df['value'].shift()

df['change_percentage'] = round(((df['value'] - df['Prev_month']) / df['Prev_month'])*100,2)

df_final = df[['Month', 'change_percentage']]
df_final



